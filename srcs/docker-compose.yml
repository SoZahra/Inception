version: '3.8'

services:
  # MariaDB Database Container
  mariadb:
    build:
      context: ./requirements/mariadb
      dockerfile: Dockerfile
    image: mariadb:inception
    container_name: mariadb
    env_file:
      - .env
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - mariadb_data:/var/lib/mysql
    networks:
      - inception_network
    restart: unless-stopped
    expose:
      - "3306"

  # WordPress with PHP-FPM Container
  wordpress:
    build:
      context: ./requirements/wordpress
      dockerfile: Dockerfile
    image: wordpress:inception
    container_name: wordpress
    env_file:
      - .env
    environment:
      - WP_DB_NAME=${WP_DB_NAME}
      - WP_DB_USER=${WP_DB_USER}
      - WP_DB_PASSWORD=${WP_DB_PASSWORD}
      - WP_DB_HOST=${WP_DB_HOST}
      - WP_TITLE=${WP_TITLE}
      - WP_ADMIN_USER=${WP_ADMIN_USER}
      - WP_ADMIN_PASSWORD=${WP_ADMIN_PASSWORD}
      - WP_ADMIN_EMAIL=${WP_ADMIN_EMAIL}
      - WP_USER=${WP_USER}
      - WP_USER_PASSWORD=${WP_USER_PASSWORD}
      - WP_USER_EMAIL=${WP_USER_EMAIL}
      - WP_USER2=${WP_USER2}
      - WP_USER2_PASSWORD=${WP_USER2_PASSWORD}
      - WP_USER2_EMAIL=${WP_USER2_EMAIL}
      - DOMAIN_NAME=${DOMAIN_NAME}
    volumes:
      - wordpress_data:/var/www/html
    networks:
      - inception_network
    depends_on:
      - mariadb
    restart: unless-stopped
    expose:
      - "9000"

  # NGINX with SSL Container
  nginx:
    build:
      context: ./requirements/nginx
      dockerfile: Dockerfile
    image: nginx:inception
    container_name: nginx
    env_file:
      - .env
    environment:
      - DOMAIN_NAME=${DOMAIN_NAME}
    ports:
      - "443:443"
    volumes:
      - wordpress_data:/var/www/html
    networks:
      - inception_network
    depends_on:
      - wordpress
    restart: unless-stopped

  # Adminer Container (BONUS)
  adminer:
    build:
      context: ./requirements/adminer
      dockerfile: Dockerfile
    image: adminer:inception
    container_name: adminer
    env_file:
      - .env
    environment:
      - ADMINER_DEFAULT_SERVER=mariadb
    networks:
      - inception_network
    depends_on:
      - mariadb
    restart: unless-stopped

  # site static (BONUS)
  static-site:
    build:
      context: ./requirements/static-site
      dockerfile: Dockerfile
    image: static-site:inception
    container_name: static-site
    env_file:
      - .env
    environment:
      - DOMAIN_NAME=${DOMAIN_NAME}
    networks:
      - inception_network
    restart: unless-stopped

# FTP Server (BONUS)
  ftp:
    build:
      context: ./requirements/ftp
      dockerfile: Dockerfile
    image: ftp:inception
    container_name: ftp
    env_file:
      - .env
    environment:   # <- Vérifier que c'est bien écrit comme ça
      - FTP_USER=${FTP_USER}
      - FTP_PASSWORD=${FTP_PASSWORD}
      - FTP_ROOT=${FTP_ROOT}
    ports:
      - "21:21"
      - "21000-21010:21000-21010"
    volumes:
      - wordpress_data:/var/www/html
    networks:
      - inception_network
    depends_on:
      - wordpress
    restart: unless-stopped

# Backup Service (BONUS)
  backup:
    build:
      context: ./requirements/backup
      dockerfile: Dockerfile
    image: backup:inception
    container_name: backup
    env_file:
      - .env
    environment:
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
    volumes:
      - wordpress_data:/var/www/html:ro
      - backup_data:/backups
    networks:
      - inception_network
    depends_on:
      - mariadb
      - wordpress
    restart: unless-stopped

# Docker Volumes
volumes:
  mariadb_data:
  wordpress_data:
  backup_data:

# Docker Network
networks:
  inception_network:
    driver: bridge
